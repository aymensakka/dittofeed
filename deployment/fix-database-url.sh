#!/bin/bash
# Fix DATABASE_URL encoding issue in Coolify

echo "==========================================="
echo "üîß DATABASE_URL Configuration Fix"
echo "==========================================="
echo ""
echo "The DATABASE_URL in your Coolify environment has special characters that need URL encoding."
echo ""
echo "Current problematic password: AXRH+ft7pHxNF/aM2m6P0g=="
echo ""
echo "The '+' and '=' characters need to be URL-encoded:"
echo "  + becomes %2B"
echo "  = becomes %3D"
echo "  / is already properly encoded as %2F"
echo ""
echo "==========================================="
echo "üìù REQUIRED COOLIFY ENVIRONMENT UPDATE:"
echo "==========================================="
echo ""
echo "In Coolify, update your DATABASE_URL to:"
echo ""
echo "DATABASE_URL=postgresql://dittofeed:AXRH%2Bft7pHxNF%2FaM2m6P0g%3D%3D@postgres:5432/dittofeed"
echo ""
echo "==========================================="
echo "üîÑ ALTERNATIVE: Generate New Password"
echo "==========================================="
echo ""
echo "If you prefer, generate a new password without special characters:"
echo ""
# Generate a URL-safe password
NEW_PASSWORD=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-24)
echo "Suggested new password: $NEW_PASSWORD"
echo ""
echo "Then update in Coolify:"
echo "  POSTGRES_PASSWORD=$NEW_PASSWORD"
echo "  DATABASE_URL=postgresql://dittofeed:${NEW_PASSWORD}@postgres:5432/dittofeed"
echo ""
echo "==========================================="
echo "‚úÖ DEPLOYMENT STEPS:"
echo "==========================================="
echo ""
echo "1. Update DATABASE_URL in Coolify environment variables (use one of the above)"
echo "2. Update POSTGRES_PASSWORD if you chose a new password"
echo "3. Redeploy the application"
echo "4. The postgres container will recreate the database with init script"
echo ""
echo "Note: You may need to clear the postgres volume if changing passwords:"
echo "  docker volume rm <project>_postgres_data"
echo ""