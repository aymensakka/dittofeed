# PostgreSQL Client Authentication Configuration
# For Dittofeed Enterprise Multitenancy Production Deployment

# TYPE  DATABASE        USER            ADDRESS                 METHOD

# =============================================================================
# LOCAL CONNECTIONS
# =============================================================================

# Local socket connections for maintenance
local   all             postgres                                peer
local   all             all                                     peer

# =============================================================================
# DOCKER NETWORK CONNECTIONS
# =============================================================================

# Docker network connections (adjust network range as needed)
host    all             all             172.20.0.0/16           scram-sha-256

# Localhost connections (for local debugging)
host    all             all             127.0.0.1/32            scram-sha-256
host    all             all             ::1/128                 scram-sha-256

# =============================================================================
# APPLICATION CONNECTIONS
# =============================================================================

# Dittofeed application database user
host    dittofeed       dittofeed       172.20.0.0/16           scram-sha-256

# =============================================================================
# MONITORING CONNECTIONS
# =============================================================================

# Prometheus postgres_exporter (if used)
host    postgres        postgres_exporter   172.20.0.0/16       scram-sha-256

# =============================================================================
# REPLICATION CONNECTIONS (for HA setups)
# =============================================================================

# Streaming replication connections
# host    replication     replicator      172.20.0.0/16           scram-sha-256

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. Using scram-sha-256 for stronger password authentication
# 2. Limited to Docker network range for security
# 3. No external connections allowed without VPN/tunnel
# 4. Peer authentication for local maintenance access
# 5. Separate users for different services (monitoring, replication)

# =============================================================================
# MULTITENANCY SECURITY
# =============================================================================

# Row-Level Security (RLS) is enforced at the database level
# Workspace isolation is handled by:
# 1. RLS policies on all tenant tables
# 2. Application-level workspace context setting
# 3. Connection-level workspace validation

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# If connections are rejected:
# 1. Check Docker network configuration
# 2. Verify user credentials
# 3. Ensure database exists
# 4. Check firewall rules
# 5. Review PostgreSQL logs

# =============================================================================
# PRODUCTION HARDENING
# =============================================================================

# For additional security in production:
# 1. Use SSL/TLS connections (ssl=on in postgresql.conf)
# 2. Implement certificate-based authentication
# 3. Regular rotation of database passwords
# 4. Monitor connection attempts via logs
# 5. Use connection pooling to limit direct connections